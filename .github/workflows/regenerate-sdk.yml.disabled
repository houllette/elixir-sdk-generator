name: Regenerate SDK

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      skip_tests:
        description: "Skip tests after regeneration"
        required: false
        default: "false"

  # Automatic trigger on spec changes
  push:
    paths:
      - "openapi-spec.yaml"
      - "openapi-spec.yml"
      - "openapi-spec.json"
    branches:
      - main

  # Schedule weekly regeneration to catch spec updates
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: "0 9 * * 1"

env:
  ELIXIR_VERSION: "1.15"
  OTP_VERSION: "26.0"

jobs:
  regenerate:
    name: Regenerate SDK from OpenAPI Spec
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Setup Node.js (for OpenAPI Generator)
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install OpenAPI Generator
        run: npm install -g @openapitools/openapi-generator-cli

      - name: Validate OpenAPI Spec
        run: ./scripts/validate-spec.sh

      - name: Regenerate SDK
        run: |
          if [ "${{ github.event.inputs.skip_tests }}" == "true" ]; then
            SKIP_TESTS=1 ./scripts/regenerate.sh
          else
            ./scripts/regenerate.sh
          fi

      - name: Check for changes
        id: changes
        run: |
          if [[ -n $(git status -s) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected after regeneration"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: regenerate SDK from OpenAPI spec"
          title: "ðŸ¤– Regenerate SDK from OpenAPI Spec"
          body: |
            This PR was automatically generated by the regenerate-sdk workflow.

            ## Changes
            The SDK has been regenerated from the latest OpenAPI specification.

            ## Checklist
            - [ ] Review generated code changes
            - [ ] Verify tests pass
            - [ ] Check for breaking changes
            - [ ] Update CHANGELOG.md if needed
            - [ ] Update version in mix.exs if needed

            ## Next Steps
            1. Review the changes carefully
            2. Run tests locally: `mix test`
            3. Check for breaking changes in the API
            4. Update documentation if needed
            5. Merge when ready

            ---
            Generated at: ${{ github.event.head_commit.timestamp }}
            Triggered by: ${{ github.event_name }}
          branch: automated/regenerate-sdk-${{ github.run_number }}
          delete-branch: true
          labels: |
            automated
            regeneration

      - name: Comment on PR (if triggered by spec change)
        if: steps.changes.outputs.changes == 'true' && github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const sha = context.sha;

            // Find the PR for this commit
            const { data: prs } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner,
              repo,
              commit_sha: sha
            });

            if (prs.length > 0) {
              const pr = prs[0];
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: pr.number,
                body: 'ðŸ¤– OpenAPI spec changed. An automated PR will be created to regenerate the SDK.'
              });
            }

  notify:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: regenerate
    if: failure()

    steps:
      - name: Send notification
        run: |
          echo "SDK regeneration failed!"
          echo "Check the workflow logs for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          # Add your notification logic here (Slack, email, etc.)
